#!/bin/sh

. `dirname "$0"`/functions
. detect-environment
. compile-options

#
# We use packaging scripts
PATH=$PATH:$BASEDIR/autobuild/deps-packaging/
#

set -x

case "$OS-$OS_VERSION" in
  centos-5.*|rhel-5.*)
    AUTOCONF=$(rpm -qa autoconf)
    AUTOMAKE=$(rpm -qa automake)
    LIBTOOL=$(rpm -qa libtool)
    ACVER=cfbuild-autoconf-2.60-1
    AMVER=cfbuild-automake-1.10.1-1
    LTVER=cfbuild-libtool-1.5.24-1
    if ! [ -z "$AUTOCONF" ]; then
      if [ "$AUTOCONF" != "$ACVER" ]; then
        sudo /bin/rpm -ev --nodeps autoconf
        DEPS="$DEPS autoconf"
      fi
    else
      DEPS="$DEPS autoconf"
    fi

    if ! [ -z "$AUTOMAKE" ]; then
      if [ "$AUTOMAKE" != "$AMVER" ]; then
        sudo /bin/rpm -ev --nodeps automake
        DEPS="$DEPS automake"
      fi
    else
      DEPS="$DEPS automake"
    fi

    if ! [ -z "$LIBTOOL" ]; then
      if [ "$LIBTOOL" != "$LTVER" ]; then
        sudo /bin/rpm -ev --nodeps libtool
        DEPS="$DEPS libtool"
      fi
    else
      DEPS="$DEPS libtool"
    fi
    ;;

  debian-4.*)
    AUTOCONF=$(dpkg -l | grep autoconf | awk '{ print $3 }')
    AUTOMAKE=$(dpkg -l | grep automake | awk '{ print $3 }')
    LIBTOOL=$(dpkg -l | grep libtool | awk '{ print $3 }')
    ACVER=cfbuild-autoconf-2.60-1
    AMVER=cfbuild-automake-1.10.1-1
    LTVER=cfbuild-libtool-1.5.24-1

    if ! [ -z "$AUTOCONF" ]; then
      if [ "$AUTOCONF" != "$ACVER" ]; then
          sudo /usr/bin/dpkg -r autoconf
          DEPS="$DEPS autoconf"
      fi 
    else
      DEPS="$DEPS autoconf"
    fi

    if ! [ -z "$AUTOMAKE" ]; then
      if [ "$AUTOMAKE" != "$AMVER" ]; then
          sudo /usr/bin/dpkg -r automake
          DEPS="$DEPS automake"
      fi 
    else
      DEPS="$DEPS automake"
    fi

    if ! [ -z "$LIBTOOL" ]; then
      if [ "$LIBTOOL" != "$LTVER" ]; then
          sudo /usr/bin/dpkg -r libtool
          DEPS="$DEPS libtool"
      fi 
    else
      DEPS="$DEPS libtool"
    fi
    ;;
  *)
    ;;
esac

case "$LIBGCC" in
  yes)
    DEPS="libgcc";;
esac

# FIXME: Why do we need zlib?

DEPS="$DEPS zlib $EMBEDDED_DB openssl pcre"

case "$SQLITE" in
  yes)
    DEPS="$DEPS sqlite";;
esac

case "$LIBSASL" in
  yes)
    DEPS="$DEPS sasl2";;
esac

case "$GNURX" in
  yes)
    DEPS="$DEPS libgnurx";;
esac

case "$OPENLDAP" in
  yes)
    DEPS="$DEPS openldap";;
esac

case "$LIBCURL" in
  yes)
    DEPS="$DEPS libcurl";;
esac

case "$PHP_CURL" in
  yes)
    SYSTEM=$(cat /etc/issue)
	case "$SYSTEM" in
	  "Ubuntu"*)
	    case "$SYSTEM" in
		  *"8."*)
		    DEPS="$DEPS php-curl-old"
		  ;;
		  *"10."* | *"12."*)
		    DEPS="$DEPS php-curl"
		  ;;
		esac
	  ;;
	  "Debian"*)
	    DEPS="$DEPS php-curl"
	  ;;
	  *"SUSE"*)
	    DEPS="$DEPS php-curl-old"
	  ;;
	  "CentOS"* | "Red"*)
	    case "$SYSTEM" in
		  *"5."*)
		    DEPS="$DEPS php-curl-old"
		  ;;
		  *"6."*)
		    DEPS="$DEPS php-curl"
		  ;;
		esac
	  ;;
	esac
esac

case "$SQL" in
  yes)
    # MySQL is disabled until we sort out legal issues
    #DEPS="$DEPS mysql"
    DEPS="$DEPS postgresql";;
esac

case "$LIBVIRT" in
  yes)
    DEPS="$DEPS libxml2 libvirt";;
esac

case "$LIBMCRYPT" in
  yes)
    DEPS="$DEPS libmcrypt";;
esac

case "$WEB" in
  yes)
	DEPS="$DEPS mongo-c mongo";;
esac

case "$PTHREADS_W32" in
  yes)
    DEPS="$DEPS pthreads-w32";;
esac

case "$PHP_MONGO" in
  yes)
    DEPS="$DEPS php-mongo";;
esac

case "$PHP_SVN" in
  yes)
    DEPS="$DEPS php-svn";;
esac

case "$PHP_JSON" in
  yes)
    DEPS="$DEPS php-json";;
esac

case "$PHP_MCRYPT" in
  yes)
    DEPS="$DEPS php-mcrypt"
    echo "PHP_MCRYPT"
    ;;
esac

case "$LIBATTR" in
  yes)
    DEPS="$DEPS libattr";;
esac

case "$LIBACL" in
  yes)
    DEPS="$DEPS libacl";;
esac

#
# Override for manual testing
#
if [ "x$1" != x ]; then
  DEPS="$@"
fi

for dep in $DEPS; do

  case "$BUILD_TYPE" in
    quick)
      optimize=yes
      debugsym=no
      versuffix=+untested
      tests=no;;
    debug)
      optimize=no
      debugsym=yes
      versuffix=+debug
      tests=no;;
    full|release)
      optimize=yes
      debugsym=no
      versuffix=
      tests=yes;;
    *)
      echo "Unknown build type: $BUILD_TYPE"
      exit 42;;
  esac

  case "$ARCH" in
    x86|x64)
      crossver=+mingw$ARCH
      cross=$ARCH;;
    *)
      crossver=
      cross=native;;
  esac

  version=0+$(cat $BASEDIR/autobuild/deps-packaging/revision)$versuffix$crossver

  if pkg-cache find $dep-$version; then
    case "$BUILD_TYPE" in
      full|release) pkg-cache prune $dep-$version;;
      quick|debug) echo "Package found in cache, skipping compilation";;
      *) echo "WAT?!"; exit 42;;
    esac
  fi

  if pkg-cache find $dep-$version; then
    :
  else
    pkg-build-${DEP_PACKAGING} $dep $tests $cross $optimize $debugsym $version
    pkg-cache store $dep-$version $(pkg-find-${DEP_PACKAGING} $BASEDIR/$dep)
  fi

  pkg-install-${DEP_PACKAGING} $(pkg-cache list $dep-$version)
done
