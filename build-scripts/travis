#!/bin/bash

set -ex
for i in core nova enterprise mission-portal masterfiles design-center
do
    if [ -d $i ]
    then
        # Repo already checked out. Probably by Travis.
        # Travis checks out only one branch, what confuses `determine-version.py`.
        # To fix it, we need to ask git to checkout other branches, too.
        # But we do it only for "core" and those repos where
        # ./3rdparty/core/determine-version.py file exists.
        # (Other repos are not checked for versions, we assume).
        if [ "$i" = "core" -o -f $i/3rdparty/core/determine-version.py ]
        then
            (
            cd $i
            # Rename the branch we're on, so that it's not in the way for the
            # subsequent fetch. It's ok if this fails, it just means we're not on any
            # branch.
            git branch -m temp-branch || true
            # Fetch rest of branches
            git fetch origin 'refs/heads/*:refs/remotes/origin/*'
            # Get last remaining tags, if any.
            git fetch --tags origin
            )
        fi
    else
        git clone git@github.com:cfengine/$i.git
    fi
done

# packages needed for autogen
sudo apt-get install git autoconf automake m4 make bison flex binutils libtool gcc g++ libc-dev libpam0g-dev python libtokyocabinet-dev libssl-dev libpcre3-dev default-jre-headless psmisc

NO_CONFIGURE=1 PROJECT=nova ./buildscripts/build-scripts/autogen

# packages needed for building
sudo apt-get install bison flex binutils build-essential fakeroot ntp dpkg-dev libpam0g-dev python debhelper pkg-config psmisc nfs-common
# remove unwanted dependencies
sudo apt-get purge libltdl-dev libltdl7 libtool

BUILD_TYPE=DEBUG; ESCAPETEST=yes;
export BUILD_TYPE ESCAPETEST
TEST_MACHINE=chroot; export TEST_MACHINE

# cleaning not needed, since Travis always gives us a clean VM
# ./buildscripts/build-scripts/clean-buildmachine
./buildscripts/build-scripts/build-environment-check
./buildscripts/build-scripts/install-dependencies
./buildscripts/build-scripts/configure
./buildscripts/build-scripts/generate-source-tarballs
./buildscripts/build-scripts/compile
# skip running tests on 'fast' and 'fast-php' jobs
expr "$job" : "fast" || ./buildscripts/build-scripts/test
./buildscripts/build-scripts/package
./buildscripts/build-scripts/prepare-results

ls output
ls output/*

if [ "$job" = "fast-php" ]; then
    # clean build leftovers before going to php tests
    ./buildscripts/build-scripts/clean-buildmachine
    # bring back PHP stuff which was hidden from build process
    [ -d ~/.phpenv.del ] && mv ~/.phpenv.del ~/.phpenv
    cd mission-portal
    job=php ./travis.sh ../output/*/*.deb
    exit $?
fi

