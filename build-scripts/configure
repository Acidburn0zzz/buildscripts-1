#!/bin/sh -x

. `dirname "$0"`/functions
. detect-environment
. compile-options

P=/var/cfengine

ARGS="--prefix=$P --sysconfdir=/etc --with-openssl=$P --with-pcre=$P"

case "$PROJECT" in
  community)
    ;; # No args need to be added
  nova)
    ARGS="$ARGS --with-nova";;
esac

case "$PTHREADS_W32" in
  yes)
    ARGS="$ARGS --with-pthreads=$P";;
  no)
    ;;
esac

case "$SQL" in
  yes)
    ARGS="$ARGS --with-postgresql=$P --without-mysql";;
  no)
    ARGS="$ARGS --without-sql";;
esac

case "$LIBACL" in
  yes)
    ARGS="$ARGS --with-libacl=$P";;
  no)
    ARGS="$ARGS --without-libacl";;
esac

case "$SQLITE" in
  yes)
    ARGS="$ARGS --with-sqlite3=$P";;
  no)
    ARGS="$ARGS --without-sqlite3";;
esac

case "$OPENLDAP" in
  yes)
    ARGS="$ARGS --with-ldap=$P";;
  no)
    ARGS="$ARGS --without-ldap";;
esac

case "$ARCH-${OS_FAMILY}" in
  x86-mingw)
    ARGS="$ARGS --host=i686-w64-mingw32";;
  x64-mingw)
    ARGS="$ARGS --host=x86_64-w64-mingw32";;
esac

case "$EMBEDDED_DB" in
  qdbm)
    ARGS="$ARGS --with-qdbm=$P";;
  tokyocabinet)
    ARGS="$ARGS --with-tokyocabinet=$P";;
  *)
    echo "Unknown embedded DB: $EMBEDDED_DB"
    exit 42;;
esac

case "$LIBVIRT" in
  yes)
    ARGS="$ARGS --with-libvirt=$P";;
  no)
    ARGS="$ARGS --without-libvirt";;
  *)
    echo "Unknown libvirt selection: $LIBVIRT"
    exit 42;;
esac

case "$WEB" in
  yes)
    ARGS="$ARGS --with-mongo=$P --with-cfmod --with-enterprise-api";;
  no)
    ARGS="$ARGS --without-mongo --without-cfmod";;
  *)
    echo "Unknown web-interface selection: $WEB"
    exit 42;;
esac

case "$OPTIMIZE" in
  yes)
    ;;
  no)
    ARGS="$ARGS --enable-debug";;
  *)
    echo "Unknown optimize selection: $OPTIMIZE"
    exit 42;;
esac

cd $BASEDIR/core && env $OPTS ./configure $ARGS
