%define prefix %{buildprefix}

%global __os_install_post %{nil}

Summary: The CFEngine Configuration System
Name: cfengine-nova-hub
Version: @@VERSION@@
Release: @@RELEASE@@
Vendor: CFEngine AS
License: COSL
Group: Applications/System
URL: http://cfengine.com/
BuildRoot: %{_topdir}/%{name}-%{version}-%{release}-buildroot
Obsoletes: cfengine3, cfengine-community, cfengine-nova, cfengine-nova-expansion
Requires(post): /usr/sbin/useradd, /usr/sbin/userdel, /usr/bin/getent
AutoReqProv: no

%if %{?with_debugsym}%{!?with_debugsym:0}
%define debug_package {nil}
%endif

%description
CFEngine is the standalone, open-source datacenter management platform run by
leading enterprises since 1993. Customize your IT systems, align to network,
business and regulatory needs, monitor problems, automatically repair and
maintain systems.

%install
rm -rf $RPM_BUILD_ROOT

mkdir -p $RPM_BUILD_ROOT%{prefix}
cp -a %{prefix}/* $RPM_BUILD_ROOT%{prefix}
cp -a %{_basedir}/core/dist/* $RPM_BUILD_ROOT

#Copy the modified init.d script according to the working directory     
cp %{_basedir}/nova/misc/init.d/cfengine3 $RPM_BUILD_ROOT/etc/init.d/cfengine3 

# Remove useless stuff

rm -f $RPM_BUILD_ROOT%{prefix}/lib/libpromises.la
rm -f $RPM_BUILD_ROOT%{prefix}/lib/libpromises.so
rm -rf $RPM_BUILD_ROOT%{prefix}/share/CoreBase
rm -f $RPM_BUILD_ROOT%{prefix}/bin/getfacl

rm -f $RPM_BUILD_ROOT%{prefix}/lib/php/cfmod.la
rm -f $RPM_BUILD_ROOT%{prefix}/lib/php/cfengine-enterprise-api.la

# GUI, REST, KB

cp -R %{_basedir}/mission-portal $RPM_BUILD_ROOT%prefix/share/GUI
cp -vR %{_basedir}/mission-portal/Apache-htaccess $RPM_BUILD_ROOT%prefix/share/GUI/htaccess
mkdir -p $RPM_BUILD_ROOT%prefix/share/GUI/api
cp -R %{_basedir}/nova/api/http/* $RPM_BUILD_ROOT%prefix/share/GUI/api
cp -R %{_basedir}/nova/api/mongo-initialize.js $RPM_BUILD_ROOT%prefix/share/GUI/api
cp -R %{_basedir}/nova/api/http/.htaccess $RPM_BUILD_ROOT%prefix/share/GUI/api
cp -R %{_basedir}/nova/rest $RPM_BUILD_ROOT%prefix/share/rest
cp -R %{_basedir}/nova/misc/solaris_admin_files $RPM_BUILD_ROOT%prefix/share
rm -rf $RPM_BUILD_ROOT%prefix/share/GUI/tests
rm -rf $RPM_BUILD_ROOT%prefix/share/GUI/application/controllers/testing.php
rm -rf $RPM_BUILD_ROOT%prefix/share/GUI/unittest_index.php
rm -rf $RPM_BUILD_ROOT%prefix/share/GUI/unit_test.php
rm -rf $RPM_BUILD_ROOT%prefix/share/rest/tests
cp -R %{_basedir}/design-center ${RPM_BUILD_ROOT}%prefix/
rm -rf ${RPM_BUILD_ROOT}%prefix/design-center/.git
rm -rf ${RPM_BUILD_ROOT}%prefix/design-center/.dir-locals.el
rm -rf ${RPM_BUILD_ROOT}%prefix/design-center/.gitignore
rm -rf ${RPM_BUILD_ROOT}%prefix/design-center/examples

rm -rf $RPM_BUILD_ROOT%prefix/httpd/build
rm -rf $RPM_BUILD_ROOT%prefix/httpd/build
rm -rf $RPM_BUILD_ROOT%prefix/httpd/build
rm -rf $RPM_BUILD_ROOT%prefix/httpd/include
rm -f $RPM_BUILD_ROOT%prefix/httpd/htdocs/index.html
#remove binaries needed to compile apache ldap module
rm -rf $RPM_BUILD_ROOT%prefix/bin/apr-1-config
rm -rf $RPM_BUILD_ROOT%prefix/bin/apu-1-config

#remove design center unrelated things
rm -rf $RPM_BUILD_ROOT%prefix/design-center/AUTHORS
rm -rf $RPM_BUILD_ROOT%prefix/design-center/LICENSE


# Change development mode in MP to production mode

sed "s/define('ENVIRONMENT', 'development')/define('ENVIRONMENT','production')/g" $RPM_BUILD_ROOT%prefix/share/GUI/index.php > $RPM_BUILD_ROOT%prefix/share/GUI/index.php.tmp
mv $RPM_BUILD_ROOT%prefix/share/GUI/index.php.tmp $RPM_BUILD_ROOT%prefix/share/GUI/index.php
rm -f $RPM_BUILD_ROOT%prefix/share/GUI/index.php.tmp

# NovaBase

cp -R %{_basedir}/nova/masterfiles $RPM_BUILD_ROOT%prefix/share/NovaBase
if [ -f %{_basedir}/core/masterfiles/cfengine_stdlib.cf ]; then
	cp %{_basedir}/core/masterfiles/cfengine_stdlib.cf $RPM_BUILD_ROOT%prefix/share/NovaBase
else
	cp -R %{_basedir}/core/masterfiles/libraries $RPM_BUILD_ROOT%prefix/share/NovaBase
	cp -R %{_basedir}/core/masterfiles/lib $RPM_BUILD_ROOT%prefix/share/NovaBase
fi

if [ -f /var/cfengine/include/sqlite3.h ]; then
	sudo rm -rf /var/cfengine/include
	sudo rm -f /var/cfengine/lib/libsqlite3.so
fi

%clean
rm -rf $RPM_BUILD_ROOT

%post

# Kill apache if running
APACHE_RUNNING=true
for i in `seq 100`;
do
	HTTPD_RUNNING=`netstat -natp | grep -E "(:80\s|:443\s).*LISTEN"`
	if [ ! -z "$HTTPD_RUNNING" ];
	then
		for i in $HTTPD_RUNNING;
		do
			COMPONENTS=`echo $i|grep "/"`
			if [ ! -z "$COMPONENTS" ];
			then
				C=`echo $COMPONENTS|cut -d'/' -f2`
				if [ ! -z "$C" ];
				then
					pkill -15 $C
				fi
			fi
		done
		sleep 1s
	else
		APACHE_RUNNING=false
		break                                                   
	fi                                                              
done                                
if [ "$APACHE_RUNNING" = "true" ];
then
	echo "could not kill httpd, you will need to manually delete this package and install it again."
	echo "please kill the following processes before attempting a new install"
	fuser -n tcp 80
	exit 0
fi

#
# Register CFEngine initscript, if not yet.
#
if [ $1 -eq 1 ]; then
    chkconfig --add cfengine3
fi

#
# Use default policy in case of fresh installation.
# If the user apache already exists, we delete it.
/usr/bin/getent passwd apache && /usr/sbin/userdel -f -r apache
/usr/sbin/useradd -d /home/apache -m apache
/usr/bin/getent group apache || /usr/sbin/groupadd apache 

mkdir -p /home/apache/.ssh
echo "Host *
      StrictHostKeyChecking no
      UserKnownHostsFile=/dev/null" >> /home/apache/.ssh/config

if ! [ -f %prefix/masterfiles/promises.cf ]; then
 /bin/cp -R %prefix/share/NovaBase/* %prefix/masterfiles
fi

if [ -f /var/cfengine/lib/php/mcrypt.so ]; then
  /bin/rm -f /var/cfengine/lib/php/mcrypt.*
fi

if [ -f /var/cfengine/lib/php/curl.so ]; then
  /bin/rm -f /var/cfengine/lib/php/curl.*
fi

cp /var/cfengine/lib/php/*.ini /var/cfengine/httpd/php/lib
cp /var/cfengine/lib/php/*.so /var/cfengine/httpd/php/lib/php/extensions/no-debug-non-zts-20100525
cp -r /var/cfengine/share/GUI/* /var/cfengine/httpd/htdocs
cp -r /var/cfengine/share/rest /var/cfengine/httpd/htdocs
mkdir -p /var/cfengine/httpd/htdocs/tmp
mv /var/cfengine/httpd/htdocs/htaccess /var/cfengine/httpd/htdocs/.htaccess
chmod 755 /var/cfengine/httpd
chown -R root:root /var/cfengine/httpd/htdocs
chmod -R 755 /var/cfengine/httpd/htdocs

#these directories should be write able by apache
chown root:apache /var/cfengine/httpd/logs
chmod 775 /var/cfengine/httpd/logs
chown apache:apache /var/cfengine/httpd/htdocs/tmp
chown apache:apache /var/cfengine/httpd/htdocs/application/logs

# This folder is required for Design Center and Mission Portal to talk to each other
mkdir -p /opt/cfengine/userworkdir
chown -R apache:apache /opt/cfengine/userworkdir

if ! [ -f /usr/bin/curl ]; then
     ln -sf /var/cfengine/bin/curl /usr/bin/curl
fi
if [ -f /etc/manpath.config ];
then
    MAN=`cat /etc/manpath.config | grep cfengine`
    if [ -z "$MAN" ]; then
# Identify SuSE or RH
        if [ -f /etc/SuSE-release ];
        then
            echo "MANDATORY_MANPATH   /var/cfengine/share/man" >> /etc/manpath.config
        else
            echo "MANPATH   /var/cfengine/share/man" >> /etc/manpath.config
        fi
    fi
fi

for i in cf-agent cf-promises cf-key cf-execd cf-serverd cf-monitord;
do
    if [ -f %prefix/bin/$i ]; then
        ln -sf %prefix/bin/$i /usr/local/sbin/$i || true
    fi
    if [ -f /usr/share/man/man8/$i.8.gz ]; then
        rm -f /usr/share/man/man8/$i.8.gz
    fi
    %prefix/bin/$i -M > /usr/share/man/man8/$i.8 && gzip /usr/share/man/man8/$i.8
done

#
# Generate a host key
#
if [ ! -f %prefix/ppkeys/localhost.priv ]; then
    %prefix/bin/cf-key >/dev/null || :
fi

if [ -f /var/cfengine/bin/cf-twin ]; then
    /bin/rm /var/cfengine/bin/cf-twin
fi
/bin/cp /var/cfengine/lib/php/*.so /var/cfengine/httpd/php/lib/php/extensions/no-debug-non-zts-20100525
/bin/cp /var/cfengine/lib/php/*.ini /var/cfengine/httpd/php/lib
/bin/cp /var/cfengine/bin/cf-agent /var/cfengine/bin/cf-twin

touch /var/cfengine/state/mongo_stamp

if [ ! -f /var/cfengine/masterfiles/update/mongod.conf ];
then
	mkdir -p /var/cfengine/masterfiles/update
	/bin/cp %prefix/share/NovaBase/update/mongod.conf %prefix/masterfiles/update/
fi
/var/cfengine/bin/mongod --dbpath /var/cfengine/state --config /var/cfengine/masterfiles/update/mongod.conf > /dev/null < /dev/null 2>$1 
for i in `seq 100`;
do
	MONGO_RUNNING=`netstat -nat| grep "127.0.0.1:27017.*LISTEN"`
	if [ ! -z "$MONGO_RUNNING" ];
	then
		break
	else
		sleep 1s
	fi
done

/var/cfengine/bin/mongo --quiet phpcfengine /var/cfengine/share/GUI/phpcfenginenova/export.js
/var/cfengine/bin/mongo --quiet cfreport /var/cfengine/share/GUI/api/mongo-initialize.js
/var/cfengine/bin/mongo --quiet phpcfengine /var/cfengine/share/GUI/phpcfenginenova/sql_reports.js
LD_LIBRARY_PATH=/var/cfengine/lib:$LD_LIBRARY_PATH /var/cfengine/httpd/bin/apachectl start

exit 0

%preun

#
# Unregister CFEngine initscript.
#
ps aux | grep -v grep | grep cf- > /dev/null

if [ $? -eq 0 ]; then
    service cfengine3 stop
fi

if [ $1 -eq 0 ]; then
    chkconfig --del cfengine3
fi

#
# Clean lock files created by initscript, if any
#
for i in cf-execd cf-serverd cf-monitord cf-hub; do
    rm -f /var/lock/$i /var/lock/subsys/$i
done

if [ -f /usr/bin/killall ]; then
 /usr/bin/killall -q -15 mongod
 /bin/rm -f %prefix/state/mongod.lock
else
 /usr/bin/pkill -15 mongod || true
 /bin/rm -f %prefix/state/mongod.lock
fi

exit 0

%postun

if [ -f /etc/php.d/cfmod.ini ]; then
    rm -f /etc/php.d/cfmod.ini
    rm -f /etc/php.d/json.ini
    rm -f /etc/php.d/mongo.ini
    rm -f /etc/php.d/curl.ini
    rm -f /etc/php.d/cfengine-enterprise-api.ini
    rm -f /etc/php.d/mcrypt.ini
fi

if [ -f /etc/php5/conf.d/cfmod.ini ]; then
    rm -f /etc/php5/conf.d/cfmod.ini
    rm -f /etc/php5/conf.d/mongo.ini
    rm -f /etc/php5/conf.d/curl.ini
    rm -f /etc/php5/conf.d/cfengine-enterprise-api.ini
fi

if [ -f /usr/lib64/php/modules/cfmod.so ]; then
    rm -f /usr/lib64/php/modules/json.so
    rm -f /usr/lib64/php/modules/cfmod.so
    rm -f /usr/lib64/php/modules/mongo.so
    rm -f /usr/lib64/php/modules/curl.so
    rm -f /usr/lib64/php/modules/cfengine-enterprise-api.so
    rm -f /usr/lib64/php/modules/mcrypt.so
fi

if [ -f /usr/lib64/php5/extensions/cfmod.so ]; then
    rm -f /usr/lib64/php5/extensions/cfmod.so
    rm -f /usr/lib64/php5/extensions/mongo.so
    rm -f /usr/lib64/php5/extensions/curl.so
    rm -f /usr/lib64/php5/extensions/cfengine-enterprise-api.so
fi

exit 0

%files
%defattr(755,root,root)

# Main program
%dir %prefix
%dir %prefix/bin
%prefix/bin/cf-agent
%prefix/bin/cf-execd
%prefix/bin/cf-key
%prefix/bin/cf-monitord
%prefix/bin/cf-promises
%prefix/bin/cf-runagent
%prefix/bin/cf-serverd
%prefix/bin/tchmgr
# Nova-only binaries
%prefix/bin/cf-hub
# mongodb server/client and supporting tools
%prefix/bin/mongod
%prefix/bin/mongo
%prefix/bin/mongodump
%prefix/bin/mongoexport
%prefix/bin/mongofiles
%prefix/bin/mongoimport
%prefix/bin/mongooplog
%prefix/bin/mongoperf
%prefix/bin/mongorestore
%prefix/bin/mongos
%prefix/bin/mongosniff
%prefix/bin/mongostat
%prefix/bin/mongotop
%prefix/bin/bsondump

%prefix/bin/git
%prefix/bin/gitk
%prefix/bin/git-cvsserver
%prefix/bin/git-receive-pack
%prefix/bin/git-shell
%prefix/bin/git-upload-archive
%prefix/bin/git-upload-pack
%prefix/bin/curl

%dir %prefix/lib
%prefix/lib/lib*.so*
# PHP modules
%prefix/lib/php
#libs needed by apache ldapmodules
%prefix/lib/apr-util-1

# Auxiliary programs
%if "%{version}" >= "3.0"
%prefix/bin/rpmvercmp
%endif

# Initscript, other configuration
/etc/init.d/cfengine3
/etc/sysconfig/cfengine3
/etc/profile.d/cfengine.sh

# Documentation
%defattr(644,root,root,755)
%dir %prefix/share
%prefix/share/man
%prefix/share/doc
# Base policy
%prefix/share/NovaBase
# Web interface
%prefix/share/GUI
%prefix/share/rest

#DC deps
%defattr(755,root,root,755)
%prefix/share/locale
%prefix/share/git-core
%prefix/share/git-gui
%prefix/share/gitk
%prefix/share/gitweb

#Solaris upgrade files
%prefix/share/solaris_admin_files

# Private directories
%defattr(755,root,root,755)
%dir %prefix/httpd
%prefix/httpd/bin
%prefix/httpd/cgi-bin
%defattr(644,root,root,755)
%prefix/httpd/conf
%prefix/httpd/error
%prefix/httpd/htdocs
%prefix/httpd/icons
%prefix/httpd/logs
%prefix/httpd/modules
%prefix/httpd/php
%defattr(755,root,root,755)
%prefix/httpd/php/bin

%defattr(644,root,root,755)
%dir %prefix/design-center
%prefix/design-center/howto
%prefix/design-center/README.markdown
%prefix/design-center/sketches
%prefix/design-center/tools

%dir %prefix/masterfiles

# Software upgrade delivery area
%dir %prefix/master_software_updates

%defattr(700,root,root,700)
%dir %prefix/ppkeys
%dir %prefix/outputs
%dir %prefix/inputs
%dir %prefix/modules

%changelog
