%define prefix /var/cfengine

Summary: The CFEngine Configuration System
Name: cfengine-nova
Version: @@VERSION@@
Release: @@RELEASE@@
Vendor: CFEngine AS
License: COSL
Group: Applications/System
URL: http://cfengine.com/
BuildRoot: %{_topdir}/%{name}-%{version}-%{release}-buildroot
Obsoletes: cfengine3, cfengine-community

AutoReqProv: no

%if %{?with_debugsym}%{!?with_debugsym:0}
%define debug_package {nil}
%endif

%if %{?with_expansion}%{!?with_expansion:0}
Source0: cfconvert
%endif

%if %{?with_expansion}%{!?with_expansion:0}
%package expansion
Summary: The CFEngine Configuration System -- web-interface
Group: Applications/System
Requires: cfengine-nova = %{version}-%{release}
AutoReqProv: no
%endif

%description
CFEngine is the standalone, open-source datacenter management platform run by
leading enterprises since 1993. Customize your IT systems, align to network,
business and regulatory needs, monitor problems, automatically repair and
maintain systems.

%if %{?with_expansion}%{!?with_expansion:0}
%description expansion
CFEngine is the standalone, open-source datacenter management platform run by
leading enterprises since 1993. Customize your IT systems, align to network,
business and regulatory needs, monitor problems, automatically repair and
maintain systems.

This package contains the web-interface for CFEngine Nova.
%endif

%install
rm -rf $RPM_BUILD_ROOT

mkdir -p $RPM_BUILD_ROOT%{prefix}
cp -a %{prefix}/* $RPM_BUILD_ROOT%{prefix}
cp -a %{_basedir}/core/dist/* $RPM_BUILD_ROOT

# Remove useless stuff

rm -f $RPM_BUILD_ROOT%{prefix}/lib/libpromises.la
rm -f $RPM_BUILD_ROOT%{prefix}/lib/libpromises.so
rm -rf $RPM_BUILD_ROOT%{prefix}/share/CoreBase

%if %{?with_expansion}%{!?with_expansion:0}

rm -f $RPM_BUILD_ROOT%{prefix}/lib/php/cfmod.la
rm -f $RPM_BUILD_ROOT%{prefix}/lib/php/cfengine-enterprise-api.la

# GUI, REST, KB

cp -R %{_basedir}/nova/GUI2 $RPM_BUILD_ROOT%prefix/share/GUI
cp -R %{_basedir}/nova/rest $RPM_BUILD_ROOT%prefix/share/rest
cp -R %{_basedir}/nova/knowledge $RPM_BUILD_ROOT%prefix/share/KnowledgeBase
cp -R %{_basedir}/nova/misc/solaris_admin_files $RPM_BUILD_ROOT%prefix/share
rm -rf $RPM_BUILD_ROOT%prefix/share/GUI/tests
rm -rf $RPM_BUILD_ROOT%prefix/share/GUI/application/controllers/testing.php
rm -rf $RPM_BUILD_ROOT%prefix/share/GUI/unittest_index.php
rm -rf $RPM_BUILD_ROOT%prefix/share/GUI/unit_test.php
rm -rf $RPM_BUILD_ROOT%prefix/share/rest/tests

# Change development mode in MP to production mode

sed "s/define('ENVIRONMENT', 'development')/define('ENVIRONMENT','production')/g" $RPM_BUILD_ROOT%prefix/share/GUI/index.php > $RPM_BUILD_ROOT%prefix/share/GUI/index.php.tmp
mv $RPM_BUILD_ROOT%prefix/share/GUI/index.php.tmp $RPM_BUILD_ROOT%prefix/share/GUI/index.php
rm -f $RPM_BUILD_ROOT%prefix/share/GUI/index.php.tmp

# NovaBase

cp -R %{_basedir}/nova/masterfiles $RPM_BUILD_ROOT%prefix/share/NovaBase
if [ -f %{_basedir}/core/masterfiles/cfengine_stdlib.cf ]; then
	cp %{_basedir}/core/masterfiles/cfengine_stdlib.cf $RPM_BUILD_ROOT%prefix/share/NovaBase
else
	cp -R %{_basedir}/core/masterfiles/libraries $RPM_BUILD_ROOT%prefix/share/NovaBase
fi
# cfconvert

cp $RPM_SOURCE_DIR/cfconvert $RPM_BUILD_ROOT%prefix/bin

if [ -f /var/cfengine/include/sqlite3.h ]; then
	sudo rm -rf /var/cfengine/include
	sudo rm -f /var/cfengine/lib/libsqlite3.so
fi

# Cleanup

find $RPM_BUILD_ROOT%prefix -name .svn | xargs -r rm -rf

%endif

%clean
rm -rf $RPM_BUILD_ROOT

%post

#
# systemd support, if there is systemctl, then prepare unit file.
#
if test -x /usr/bin/systemctl; then
    if [ ! -d /usr/lib/systemd/scripts ]; then
        mkdir -p /usr/lib/systemd/scripts
    fi
    if [ ! -f /usr/lib/systemd/scripts/cfengine3 ]; then
        cp -f /etc/init.d/cfengine3 /usr/lib/systemd/scripts
        chmod 0755 /usr/lib/systemd/scripts/cfengine3
    fi
    if [ ! -f /usr/lib/systemd/system/cfengine3.service ]; then
        cat > /usr/lib/systemd/system/cfengine3.service << EOF
[Unit]
Description=CFEngine 3 deamons
 
[Service]
Type=oneshot
EnvironmentFile=/etc/sysconfig/cfengine3
ExecStart=/usr/lib/systemd/scripts/cfengine3 start
ExecStop=/usr/lib/systemd/scripts/cfengine3 stop
RemainAfterExit=yes
 
[Install]
WantedBy=multi-user.target
EOF
    fi
fi

#
# Register CFEngine initscript, if not yet.
#
if [ $1 -eq 1 ]; then
    chkconfig --add cfengine3
    if [ -f /usr/lib/systemd/system/cfengine3.service ]; then
        test -x /usr/bin/systemctl && systemctl enable cfengine3 > /dev/null 2>&1
    fi
fi
if [ $1 -eq 2 ]; then
    if [ -f /usr/lib/systemd/system/cfengine3.service ]; then
        test -x /usr/bin/systemctl && systemctl enable cfengine3 > /dev/null 2>&1
    fi
fi


#
# Generate a host key
#
if [ ! -f %prefix/ppkeys/localhost.priv ]; then
    %prefix/bin/cf-key >/dev/null || :
fi


/bin/cp %prefix/bin/cf-agent %prefix/bin/cf-twin
for i in cf-agent cf-promises cf-key cf-execd cf-serverd cf-monitord cf-runagent;
do
	if [ -f %prefix/bin/$i -a -d /usr/local/sbin ]; then
		ln -sf %prefix/bin/$i /usr/local/sbin/$i || true
	fi
	if [ -f /usr/share/man/man8/$i.8.gz ]; then
		rm -f /usr/share/man/man8/$i.8.gz
	fi
	%prefix/bin/$i -M > /usr/share/man/man8/$i.8 && gzip /usr/share/man/man8/$i.8
done

if [ $1 -eq 1 ]; then
    #
    # Start CFEngine during installation
    #
    test -f %prefix/inputs/promises.cf && service cfengine3 start || true
elif [ $1 -eq 2 ]; then
    #
    # And restart during upgrade
    #
    service cfengine3 restart
fi

exit 0

%preun
if [ $1 -eq 0 ]; then
 
    #
    # Unregister CFEngine initscript.
    #
    ps aux | grep -v grep | grep cf- > /dev/null

    if [ $? -eq 0 ]; then
        service cfengine3 stop
    fi
  
    #
    # Unregister CFEngine initscript on uninstallation.
    #
    chkconfig --del cfengine3

    #
    # systemd support
    #
    test -x /usr/bin/systemctl && systemctl disable cfengine3 > /dev/null 2>&1
    if [ -f /usr/lib/systemd/scripts/cfengine3 ]; then
        rm -f /usr/lib/systemd/scripts/cfengine3
    fi
    if [ -f /usr/lib/systemd/system/cfengine3.service ]; then
        rm -f /usr/lib/systemd/system/cfengine3.service
    fi
fi

#
# Clean lock files created by initscript, if any
#
for i in cf-execd cf-serverd cf-monitord cf-hub; do
    rm -f /var/lock/$i /var/lock/subsys/$i
done

exit 0

%if %{?with_expansion}%{!?with_expansion:0}
%post expansion

#
# Use default policy in case of fresh installation.
#
if ! [ -f %prefix/masterfiles/promises.cf ]; then
 /bin/cp -R %prefix/share/NovaBase/* %prefix/masterfiles
fi
exit 0

%preun expansion

if [ -f /usr/bin/killall ]; then
 /usr/bin/killall -q -15 mongod
 /bin/rm -f %prefix/state/mongod.lock
else
 /usr/bin/pkill -15 mongod || true
 /bin/rm -f %prefix/state/mongod.lock
fi
exit 0
%endif

%files
%defattr(755,root,root)

# Main program
%dir %prefix
%dir %prefix/bin
%prefix/bin/cf-agent
%prefix/bin/cf-execd
%prefix/bin/cf-key
%prefix/bin/cf-know
%prefix/bin/cf-monitord
%prefix/bin/cf-promises
%prefix/bin/cf-report
%prefix/bin/cf-runagent
%prefix/bin/cf-serverd
%prefix/bin/tchmgr
%dir %prefix/lib
%prefix/lib/lib*.so.*

# Initscript, other configuration
/etc/init.d/cfengine3
/etc/sysconfig/cfengine3
/etc/profile.d/cfengine.sh

# Documentation
%dir %prefix/share
%prefix/share/man
%prefix/share/doc

# Private directories

%dir %prefix/masterfiles

%defattr(700,root,root)
%dir %prefix/ppkeys
%dir %prefix/outputs
%dir %prefix/inputs
%dir %prefix/modules

%if %{?with_expansion}%{!?with_expansion:0}
%files expansion
%defattr(755,root,root)

# Nova-only binaries
%prefix/bin/cf-hub
%prefix/bin/cfconvert
%prefix/bin/mongo*

# PHP modules
%prefix/lib/php

# Base policy
%prefix/share/NovaBase

# Web interface
%prefix/share/GUI
%prefix/share/rest
%prefix/share/KnowledgeBase

#Solaris upgrade files
%prefix/share/solaris_admin_files

# Software upgrade delivery area
%prefix/master_software_updates

%endif

%changelog
